#############
# templates #
#############

template logstash {
    subject = `
        {
            "Summary": "{{ .Alert.Name }}",
            "SourceAlertKey": "Bosun",
            "SourceSeverity": "Critical",
            "SourceIdentifier": "Identifier",
            "SourceEventID": "1455867577750",
            "Severity": "{{ if eq (print .Alert.Warn) .Result.Expr }}1{{ else }}3{{ end }}",
            "LastOccurrence": {{.Start}},
            "SourceCIName": "server.langer.lan",
            "Status": 1,
            "SourceID": 10
        }
    `
}

#notification logstash{
#    post = http://logstash:8080
#    body = json={"subject":"{{.}}"}
#}

#alert logstash.alert {
#    template = logstash
#    $q = avg(q("sum:rate:container.cpu{stack=*}", "1h", ""))
#    crit = $q > 1000
#    critNotification = logstash
#    warn = $q <= 1000
#    warnNotification = logstash
#}

notification default {
	email = langer.markus@gmail.com
	print = true
    #timeout = 1d
}

template ut {
    subject = {{.Name}}: {{.Group | len}} unknown alerts
        body = `
            <p>Time: {{.Time}}
            <p>Name: {{.Name}}
            <p>Alerts:
            {{range .Group}}
            <br>{{.}}
    {{end}}`
}

unknownTemplate = ut

template generic {
	body = `<a href="{{.Ack}}">Acknowledge alert</a>
	<p>Alert definition:
	<p>Name: {{.Alert.Name}}
	<p>Crit: {{.Alert.Crit}}
	<p>Tags
	<table>
		{{range $k, $v := .Group}}
			{{if eq $k "host"}}
				<tr><td>{{$k}}</td><td><a href="{{$.HostView $v}}">{{$v}}</a></td></tr>
			{{else}}
				<tr><td>{{$k}}</td><td>{{$v}}</td></tr>
			{{end}}
		{{end}}
	</table>

	<p>Computation
	<table>
		{{range .Computations}}
			<tr><td>{{.Text}}</td><td>{{.Value}}</td></tr>
		{{end}}
	</table>`
	subject = {{.Last.Status}}: {{.Alert.Name}}: {{.Eval .Alert.Vars.q}} on {{.Group.host}}
}

template name {
	body = Name: {{.Alert.Name}}
}

template ex {
	body = `Alert definition:
	{{template "name" .}}
	Crit: {{.Alert.Crit}}

	Tags:{{range $k, $v := .Group}}
	{{$k}}: {{$v}}{{end}}
	`
	subject = {{.Alert.Name}}: {{.Eval .Alert.Vars.q }} on {{.Group.host}}
}

##############
# cpu_checks #
##############

alert cpu_system.is.too.high {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_system{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q > 80
	warn = $q > 60
    warnNotification = default
    critNotification = default
}

alert cpu_guest.is.too.high {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_guest{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q > 80
	warn = $q > 60
    warnNotification = default
    critNotification = default
}

alert cpu_idle.is.too.low {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_idle{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q < 60
	warn = $q < 80
}

alert cpu_irq.too.high {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_irq{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q > 80
	warn = $q > 60
    warnNotification = default
    critNotification = default
}

alert cpu_softirq.too.high {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_softirq{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q > 80
	warn = $q > 60
    warnNotification = default
    critNotification = default
}

alert cpu_guest_nice.too.high {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_guest_nice{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q > 80
    warn = $q > 60
    warnNotification = default
    critNotification = default
}

alert cpu_iowait.too.high {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_iowait{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q > 80
	warn = $q > 60
    warnNotification = default
    critNotification = default
}

alert cpu_nice.too.high {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_nice{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q > 80
	warn = $q > 60
    warnNotification = default
    critNotification = default
}

alert cpu_steal.too.high {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_steal{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q > 80
	warn = $q > 60
    warnNotification = default
    critNotification = default
}

alert cpu_user.too.high {
	template = ex
	$metric = q("sum:telegraf.cpu_usage_user{host=*,cpu=cpu-total}", "1h", "")
	$q = avg($metric)
	crit = $q > 80
	warn = $q > 60
    warnNotification = default
    critNotification = default
}

###############
# load checks #
###############

alert unix_load_short {
    template = generic
    $cpus = avg(q("sum:telegraf.system_n_cpus{host=*}", "5m", ""))
    $metric = q("sum:telegraf.system_load1{host=*}", "5m", "")
    $q = avg($metric)
    crit = $q > $cpus
    warn = $q > ($cpus * 0.9)
	warnNotification = default
	critNotification = default
}

alert unix_load_middle {
    template = generic
    $cpus = avg(q("sum:telegraf.system_n_cpus{host=*}", "5m", ""))
    $metric = q("sum:telegraf.system_load5{host=*}", "5m", "")
    $q = avg($metric)
    crit = $q > ($cpus * 0.9)
    warn = $q > ($cpus * 0.8)
	warnNotification = default
	critNotification = default
}

alert unix_load_long {
    template = generic
    $cpus = avg(q("sum:telegraf.system_n_cpus{host=*}", "5m", ""))
    $metric = q("sum:telegraf.system_load15{host=*}", "5m", "")
    $q = avg($metric)
    crit = $q > ($cpus * 0.8)
    warn = $q > ($cpus * 0.7)
	warnNotification = default
	critNotification = default
}

################
# cisco checks #
################

alert cisco.cpu_5sec {
	template = ex
	$metric = q("sum:telegraf.snmp_cpmCPUTotal5sec{host=*}", "5m", "")
	$q = avg($metric)
	crit = $q > 80
	warn = $q > 70
    warnNotification = default
    critNotification = default
}

alert cisco.cpu_1min {
	template = ex
	$metric = q("sum:telegraf.snmp_cpmCPUTotal1min{host=*}", "5m", "")
	$q = avg($metric)
	crit = $q > 65
	warn = $q > 55
    warnNotification = default
    critNotification = default
}

alert cisco.cpu_5min {
	template = ex
	$metric = q("sum:telegraf.snmp_cpmCPUTotal1min{host=*}", "5m", "")
	$q = avg($metric)
	crit = $q > 40
	warn = $q > 35
    warnNotification = default
    critNotification = default
}